#!/bin/sh

#################################################################################
#
#   Lynis
# ------------------
#
# Copyright 2007-2013, Michael Boelen
# Copyright 2007-2021, CISOfy
#
# Website  : https://cisofy.com
# Blog     : http://linux-audit.com
# GitHub   : https://github.com/CISOfy/lynis
#
# Lynis comes with ABSOLUTELY NO WARRANTY. This is free software, and you are
# welcome to redistribute it under the terms of the GNU General Public License.
# See LICENSE file for usage of this software.
#
#################################################################################
#
# Privilynis
#
#################################################################################
#
    InsertSection "PRIVLYINIS: Policy Checking Scripts "
#
#################################################################################


# Test        : SLP-001
# Description : Control File Access for Specific Daemons (SELinux Policy)


Register --test-no SLP-0001 --weight H --network NO --category security --description "Control File Access for Specific Daemons (SELinux Policy)"

# Check if the test should be skipped
if [ "${SKIPTEST}" -eq 0 ]; then

    # Template function to validate SELinux contexts
    validate_context() {
        file=$1
        daemon=$2
        expected_context=$3

        # Check the actual SELinux context
        actual_context=$(ls -Z $file | awk '{print $1}')

        # Compare the actual context with the expected context
        if [ "$actual_context" != "$expected_context" ]; then
            Display --indent 4 --text "- SLP-001: Checking config of $daemon on $file" --result WARNING --color RED
            LogText "Result: Incorrect context for $daemon on $file. Expected: $expected_context, Found: $actual_context"
            ReportWarning "SLP-001" "$daemon does not have the correct configuaration on $file"
        else
            Display --indent 4 --text "- SLP-001: Checking config of $daemon on $file" --result OK --color GREEN
            LogText "Result: Correct context for $daemon on $file"
        fi
    }

    # Define critical files and their associated daemons
    validate_context "/etc/passwd" "sshd" "system_u:object_r:passwd_file_t:s0"
    validate_context "/var/www/html" "httpd" "system_u:object_r:httpd_sys_content_t:s0"
    validate_context "/var/lib/mysql" "mysqld" "system_u:object_r:mysqld_db_t:s0"
    validate_context "/var/spool/mail" "dovecot" "system_u:object_r:mail_spool_t:s0"

fi


################################################################################

# Test        : SLP-0002
# Description : Restrict Network Access Based on Process Type (SELinux Policy)

Register --test-no SLP-0002 --weight H --network NO --category security --description "Restrict Network Access Based on Process Type (SELinux Policy)"

# Check if the test should be skipped
if [ "${SKIPTEST}" -eq 0 ]; then

    # Template function to validate network access rules
    validate_network_access() {
        process=$1
        expected_rule=$2

        # Check the current network connections for the process
        network_access=$(ss -plnt | grep "$process")

        # Compare the actual access against the expected rule
        if [ -z "$network_access" ] || ! echo "$network_access" | grep -q "$expected_rule"; then
            Display --indent 4 --text "- SLP-0002: Network access violation by $process" --result WARNING --color RED
            LogText "Result: $process is not following the expected network access rule: $expected_rule"
            ReportWarning "SLP-0002" "$process is not following the expected network access rule"
        else
            Display --indent 4 --text "- SLP-0002: Correct network access by $process" --result OK --color GREEN
            LogText "Result: Correct network access by $process"
        fi
    }

    # Define processes and their network access rules
    validate_network_access "systemd" "localhost"
    validate_network_access "nginx" "port 80"
    validate_network_access "httpd" "port 80"
    validate_network_access "sshd" "port 22"
    validate_network_access "mysqld" "192.168.*"
    validate_network_access "postfix" "port 25"
    validate_network_access "dovecot" "port 143"

fi

#################################################################################

# Test        : 
# Description : 



#################################################################################


# Wait for keypress (unless --quick is being used)
WaitForKeyPress

#
#================================================================================
# Lynis - Security Auditing and System Hardening for Linux and UNIX - https://cisofy.com
